package org.devgateway.geocoder;

import org.devgateway.geocoder.domain.Country;
import org.devgateway.geocoder.domain.GazetteerAgency;
import org.devgateway.geocoder.domain.GeographicExactness;
import org.devgateway.geocoder.domain.GeographicFeatureDesignation;
import org.devgateway.geocoder.domain.GeographicLocationClass;
import org.devgateway.geocoder.domain.GeographicLocationReach;
import org.devgateway.geocoder.domain.GeographicVocabulary;
import org.devgateway.geocoder.domain.GeographicalPrecision;
import org.devgateway.geocoder.repositories.ActivityRepository;
import org.devgateway.geocoder.repositories.CountryRepository;
import org.devgateway.geocoder.repositories.GazetteerAgencyRepository;
import org.devgateway.geocoder.repositories.GeographicExactnessRepository;
import org.devgateway.geocoder.repositories.GeographicFeatureDesignationRepository;
import org.devgateway.geocoder.repositories.GeographicLocationClassRepository;
import org.devgateway.geocoder.repositories.GeographicLocationReachRepository;
import org.devgateway.geocoder.repositories.GeographicVocabularyRepository;
import org.devgateway.geocoder.repositories.GeographicalPrecisionRepository;
import org.devgateway.geocoder.service.XmlImport;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

/**
 * @author idobre
 * @since 12/12/2017
 *
 * This Controller is used to quickly import (without code changes) some test data after the database was cleaned.
 */

@RestController
@CrossOrigin
public class DummyDataController {
    @Autowired
    GazetteerAgencyRepository gazetteerAgencyRepository;

    @Autowired
    GeographicalPrecisionRepository geographicalPrecisionRepository;

    @Autowired
    GeographicLocationReachRepository geographicLocationReachRepository;

    @Autowired
    GeographicExactnessRepository geographicExactnessRepository;

    @Autowired
    GeographicLocationClassRepository geographicLocationClassRepository;

    @Autowired
    GeographicVocabularyRepository geographicVocabularyRepository;

    @Autowired
    CountryRepository countryRepository;

    @Autowired
    GeographicFeatureDesignationRepository geographicFeatureDesignationRepository;

    @Autowired
    XmlImport xmlImport;

    @Autowired
    ActivityRepository activityRepository;

    @RequestMapping(value = "/importTestData", method = RequestMethod.GET)
    public void importTestData() {
        GazetteerAgency gazetteerAgency;
        gazetteerAgency = new GazetteerAgency();
        gazetteerAgency.setCode("1");
        gazetteerAgency.setName("Geonames.org");
        gazetteerAgency.setLang("en");
        gazetteerAgencyRepository.save(gazetteerAgency);

        gazetteerAgency = new GazetteerAgency();
        gazetteerAgency.setCode("2");
        gazetteerAgency.setName("National Geospatial-Intelligence Agency");
        gazetteerAgency.setLang("en");
        gazetteerAgencyRepository.save(gazetteerAgency);

        gazetteerAgency = new GazetteerAgency();
        gazetteerAgency.setCode("3");
        gazetteerAgency.setName("Open Street Map");
        gazetteerAgency.setLang("en");
        gazetteerAgencyRepository.save(gazetteerAgency);

        /***/
        GeographicVocabulary geographicVocabulary = null;
        geographicVocabulary = new GeographicVocabulary();
        geographicVocabulary.setCode("A1");
        geographicVocabulary.setName("Global Admininistrative Unit Layers");
        geographicVocabulary.setLang("en");
        geographicVocabularyRepository.save(geographicVocabulary);


        geographicVocabulary = new GeographicVocabulary();
        geographicVocabulary.setCode("A2");
        geographicVocabulary.setName("UN Second Administrative Level Boundary Project");
        geographicVocabulary.setDescription("Note: the unsalb.org website is no longer accessible, and public access to the boundaries resources has been removed http://www.ungiwg.org/content/united-nations-international-and-administrative-boundaries-resources");
        geographicVocabulary.setLang("en");
        geographicVocabularyRepository.save(geographicVocabulary);

        geographicVocabulary = new GeographicVocabulary();
        geographicVocabulary.setCode("A3");
        geographicVocabulary.setName("Global Administrative Areas");
        geographicVocabulary.setLang("en");
        geographicVocabularyRepository.save(geographicVocabulary);

        geographicVocabulary = new GeographicVocabulary();
        geographicVocabulary.setCode("A4");
        geographicVocabulary.setName("ISO Country (3166-1 alpha-2)");
        geographicVocabulary.setLang("en");
        geographicVocabularyRepository.save(geographicVocabulary);

        geographicVocabulary = new GeographicVocabulary();
        geographicVocabulary.setCode("G1");
        geographicVocabulary.setName("Geonames");
        geographicVocabulary.setLang("en");
        geographicVocabularyRepository.save(geographicVocabulary);


        geographicVocabulary = new GeographicVocabulary();
        geographicVocabulary.setCode("G2");
        geographicVocabulary.setName("OpenStreetMap");
        geographicVocabulary.setDescription("Note: the code should be formed by prefixing the relevant OpenStreetMap ID with node/ way/ or relation/ as appropriate, e.g. node/1234567");
        geographicVocabulary.setLang("en");
        geographicVocabularyRepository.save(geographicVocabulary);

        /***/
        GeographicalPrecision geographicalPrecision = null;
        geographicalPrecision = new GeographicalPrecision();
        geographicalPrecision.setCode("1");
        geographicalPrecision.setName("Exact location");
        geographicalPrecision.setDescription("The coordinates corresponds to an exact location, such as a populated place or a hill. The code is also used for locations that join a location which is a line (such as a road or railroad). Lines are not coded only the points that connect lines. All points that are mentioned in the source are coded.");
        geographicalPrecision.setLang("en");
        geographicalPrecisionRepository.save(geographicalPrecision);

        geographicalPrecision = new GeographicalPrecision();
        geographicalPrecision.setCode("2");
        geographicalPrecision.setName("Near exact location");
        geographicalPrecision.setDescription("The location is mentioned in the source as being near, in the area of, or up to 25 km away from an exact location. The coordinates refer to that adjacent, exact, location.");
        geographicalPrecision.setLang("en");
        geographicalPrecisionRepository.save(geographicalPrecision);

        geographicalPrecision = new GeographicalPrecision();
        geographicalPrecision.setCode("3");
        geographicalPrecision.setName("Second order administrative division");
        geographicalPrecision.setDescription("The location is, or lies in, a second order administrative division  (ADM2), such as a district, municipality or commune");
        geographicalPrecision.setLang("en");
        geographicalPrecisionRepository.save(geographicalPrecision);

        geographicalPrecision = new GeographicalPrecision();
        geographicalPrecision.setCode("4");
        geographicalPrecision.setName("First order administrative division");
        geographicalPrecision.setDescription("The location is, or lies in, a first order administrative division (ADM1), such as a province, state or governorate");
        geographicalPrecision.setLang("en");
        geographicalPrecisionRepository.save(geographicalPrecision);

        geographicalPrecision = new GeographicalPrecision();
        geographicalPrecision.setCode("5");
        geographicalPrecision.setName("Estimated coordinates");
        geographicalPrecision.setDescription("The location can only be related to estimated coordinates, such as when a location  lies between populated places; along rivers, roads and borders; more than 25 km away from a specific location; or when sources refer to parts of a country greater than ADM1 (e.g. northern Uganda).");
        geographicalPrecision.setLang("en");
        geographicalPrecisionRepository.save(geographicalPrecision);

        geographicalPrecision = new GeographicalPrecision();
        geographicalPrecision.setCode("6");
        geographicalPrecision.setName("Independent political entity");
        geographicalPrecision.setDescription("The location can only be related to an independent political entity, meaning the pair of coordinates that represent a country.");
        geographicalPrecision.setLang("en");
        geographicalPrecisionRepository.save(geographicalPrecision);

        geographicalPrecision = new GeographicalPrecision();
        geographicalPrecision.setCode("7");
        geographicalPrecision.setName("Unclear - capital Unclear.");
        geographicalPrecision.setDescription("The capital is assumed to be one of two possible locations. (The other option is the country level, with precision 9.)");
        geographicalPrecision.setLang("en");
        geographicalPrecisionRepository.save(geographicalPrecision);

        geographicalPrecision = new GeographicalPrecision();
        geographicalPrecision.setCode("8");
        geographicalPrecision.setName("Local or national capital");
        geographicalPrecision.setDescription("The location is estimated to be a seat of an administrative division (local capital) or the national capital.If aid goes to Luanda without further specification on the location, and there is an ADM1 and a capital called Luanda, then code the coordinates of the capital with precision 8. If it is not  spelled out that aid goes to the capital;  but if it is clear that it goes to a government ministry or to government financial institutions; and if those institutions are most likely located in the capital; then the coordinates of the capital are coded with precision 8. (However,if it can be verified that the recipient institution is located in the capital then precision 1 is used.)");
        geographicalPrecision.setLang("en");
        geographicalPrecisionRepository.save(geographicalPrecision);

        geographicalPrecision = new GeographicalPrecision();
        geographicalPrecision.setCode("9");
        geographicalPrecision.setName("Unclear - country Unclear.");
        geographicalPrecision.setDescription("The locations is estimated to be the country  level(often paired with the capital, with precision 7)");
        geographicalPrecision.setLang("en");
        geographicalPrecisionRepository.save(geographicalPrecision);


        GeographicLocationReach geographicLocationReach = null;

        geographicLocationReach = new GeographicLocationReach();

        geographicLocationReach.setCode("1");
        geographicLocationReach.setName("Activity");
        geographicLocationReach.setDescription("The location specifies where the activity is carried out");
        geographicLocationReach.setLang("en");
        geographicLocationReachRepository.save(geographicLocationReach);

        geographicLocationReach = new GeographicLocationReach();
        geographicLocationReach.setCode("2");
        geographicLocationReach.setName("Intended Beneficiaries");
        geographicLocationReach.setDescription("The location specifies where the intended beneficiaries of the activity live");
        geographicLocationReach.setLang("en");
        geographicLocationReachRepository.save(geographicLocationReach);


        GeographicExactness geographicExactness = null;

        geographicExactness = new GeographicExactness();
        geographicExactness.setCode("1");
        geographicExactness.setName("Exact");
        geographicExactness.setDescription("The designated geographic location is exact");
        geographicExactness.setLang("en");
        geographicExactnessRepository.save(geographicExactness);

        geographicExactness = new GeographicExactness();
        geographicExactness.setCode("2");
        geographicExactness.setName("Approximate");
        geographicExactness.setDescription("The designated geographic location is approximate");
        geographicExactness.setLang("en");
        geographicExactnessRepository.save(geographicExactness);

        GeographicLocationClass geographicLocationClass = null;

        geographicLocationClass = new GeographicLocationClass();
        geographicLocationClass.setCode("1");
        geographicLocationClass.setName("Administrative Region");
        geographicLocationClass.setDescription("The designated geographic location is an administrative region (state, county, province, district, municipality etc.)");
        geographicLocationClass.setLang("en");
        geographicLocationClassRepository.save(geographicLocationClass);

        geographicLocationClass = new GeographicLocationClass();
        geographicLocationClass.setCode("2");
        geographicLocationClass.setName("Populated Place");
        geographicLocationClass.setDescription("The designated geographic location is a populated place (town, village, farm etc.)");
        geographicLocationClass.setLang("en");
        geographicLocationClassRepository.save(geographicLocationClass);


        geographicLocationClass = new GeographicLocationClass();
        geographicLocationClass.setCode("3");
        geographicLocationClass.setName("Structure");
        geographicLocationClass.setDescription("The designated geopgraphic location is a structure (such as a school or a clinic)");
        geographicLocationClass.setLang("en");
        geographicLocationClassRepository.save(geographicLocationClass);


        geographicLocationClass = new GeographicLocationClass();
        geographicLocationClass.setCode("4");
        geographicLocationClass.setName("Other Topographical Feature");
        geographicLocationClass.setDescription("The designated geographic location is a topographical feature, such as a mountain, a river, a forest");
        geographicLocationClass.setLang("en");
        geographicLocationClassRepository.save(geographicLocationClass);


        Country country;
        country = new Country("AF", "AFGHANISTAN", "en");
        countryRepository.save(country);
        country = new Country("AX", "ÅLAND ISLANDS", "en");
        countryRepository.save(country);
        country = new Country("AL", "ALBANIA", "en");
        countryRepository.save(country);
        country = new Country("DZ", "ALGERIA", "en");
        countryRepository.save(country);
        country = new Country("AS", "AMERICAN SAMOA", "en");
        countryRepository.save(country);
        country = new Country("AD", "ANDORRA", "en");
        countryRepository.save(country);
        country = new Country("AO", "ANGOLA", "en");
        countryRepository.save(country);
        country = new Country("AI", "ANGUILLA", "en");
        countryRepository.save(country);
        country = new Country("AQ", "ANTARCTICA", "en");
        countryRepository.save(country);
        country = new Country("AG", "ANTIGUA AND BARBUDA", "en");
        countryRepository.save(country);
        country = new Country("AR", "ARGENTINA", "en");
        countryRepository.save(country);
        country = new Country("AM", "ARMENIA", "en");
        countryRepository.save(country);
        country = new Country("AW", "ARUBA", "en");
        countryRepository.save(country);
        country = new Country("AU", "AUSTRALIA", "en");
        countryRepository.save(country);
        country = new Country("AT", "AUSTRIA", "en");
        countryRepository.save(country);
        country = new Country("AZ", "AZERBAIJAN", "en");
        countryRepository.save(country);
        country = new Country("BS", "BAHAMAS (THE)", "en");
        countryRepository.save(country);
        country = new Country("BH", "BAHRAIN", "en");
        countryRepository.save(country);
        country = new Country("BD", "BANGLADESH", "en");
        countryRepository.save(country);
        country = new Country("BB", "BARBADOS", "en");
        countryRepository.save(country);
        country = new Country("BY", "BELARUS", "en");
        countryRepository.save(country);
        country = new Country("BE", "BELGIUM", "en");
        countryRepository.save(country);
        country = new Country("BZ", "BELIZE", "en");
        countryRepository.save(country);
        country = new Country("BJ", "BENIN", "en");
        countryRepository.save(country);
        country = new Country("BM", "BERMUDA", "en");
        countryRepository.save(country);
        country = new Country("BT", "BHUTAN", "en");
        countryRepository.save(country);
        country = new Country("BO", "BOLIVIA (PLURINATIONAL STATE OF)", "en");
        countryRepository.save(country);
        country = new Country("BQ", "BONAIRE, SAINT EUSTATIUS AND SABA", "en");
        countryRepository.save(country);
        country = new Country("BA", "BOSNIA AND HERZEGOVINA", "en");
        countryRepository.save(country);
        country = new Country("BW", "BOTSWANA", "en");
        countryRepository.save(country);
        country = new Country("BV", "BOUVET ISLAND", "en");
        countryRepository.save(country);
        country = new Country("BR", "BRAZIL", "en");
        countryRepository.save(country);
        country = new Country("IO", "BRITISH INDIAN OCEAN TERRITORY (THE)", "en");
        countryRepository.save(country);
        country = new Country("BN", "BRUNEI DARUSSALAM", "en");
        countryRepository.save(country);
        country = new Country("BG", "BULGARIA", "en");
        countryRepository.save(country);
        country = new Country("BF", "BURKINA FASO", "en");
        countryRepository.save(country);
        country = new Country("BI", "BURUNDI", "en");
        countryRepository.save(country);
        country = new Country("KH", "CAMBODIA", "en");
        countryRepository.save(country);
        country = new Country("CM", "CAMEROON", "en");
        countryRepository.save(country);
        country = new Country("CA", "CANADA", "en");
        countryRepository.save(country);
        country = new Country("CV", "CAPE VERDE", "en");
        countryRepository.save(country);
        country = new Country("KY", "CAYMAN ISLANDS (THE)", "en");
        countryRepository.save(country);
        country = new Country("CF", "CENTRAL AFRICAN REPUBLIC (THE)", "en");
        countryRepository.save(country);
        country = new Country("TD", "CHAD", "en");
        countryRepository.save(country);
        country = new Country("CL", "CHILE", "en");
        countryRepository.save(country);
        country = new Country("CN", "CHINA", "en");
        countryRepository.save(country);
        country = new Country("CX", "CHRISTMAS ISLAND", "en");
        countryRepository.save(country);
        country = new Country("CC", "COCOS (KEELING) ISLANDS (THE)", "en");
        countryRepository.save(country);
        country = new Country("CO", "COLOMBIA", "en");
        countryRepository.save(country);
        country = new Country("KM", "COMOROS (THE)", "en");
        countryRepository.save(country);
        country = new Country("CG", "CONGO (THE)", "en");
        countryRepository.save(country);
        country = new Country("CD", "CONGO, THE DEMOCRATIC REPUBLIC OF THE", "en");
        countryRepository.save(country);
        country = new Country("CK", "COOK ISLANDS (THE)", "en");
        countryRepository.save(country);
        country = new Country("CR", "COSTA RICA", "en");
        countryRepository.save(country);
        country = new Country("CI", "CÃ”TE D'IVOIRE", "en");
        countryRepository.save(country);
        country = new Country("HR", "CROATIA", "en");
        countryRepository.save(country);
        country = new Country("CU", "CUBA", "en");
        countryRepository.save(country);
        country = new Country("CW", "CURAÃ‡AO", "en");
        countryRepository.save(country);
        country = new Country("CY", "CYPRUS", "en");
        countryRepository.save(country);
        country = new Country("CZ", "CZECH REPUBLIC (THE)", "en");
        countryRepository.save(country);
        country = new Country("DK", "DENMARK", "en");
        countryRepository.save(country);
        country = new Country("DJ", "DJIBOUTI", "en");
        countryRepository.save(country);
        country = new Country("DM", "DOMINICA", "en");
        countryRepository.save(country);
        country = new Country("DO", "DOMINICAN REPUBLIC (THE)", "en");
        countryRepository.save(country);
        country = new Country("EC", "ECUADOR", "en");
        countryRepository.save(country);
        country = new Country("EG", "EGYPT", "en");
        countryRepository.save(country);
        country = new Country("SV", "EL SALVADOR", "en");
        countryRepository.save(country);
        country = new Country("GQ", "EQUATORIAL GUINEA", "en");
        countryRepository.save(country);
        country = new Country("ER", "ERITREA", "en");
        countryRepository.save(country);
        country = new Country("EE", "ESTONIA", "en");
        countryRepository.save(country);
        country = new Country("ET", "ETHIOPIA", "en");
        countryRepository.save(country);
        country = new Country("FK", "FALKLAND ISLANDS (THE) [MALVINAS]", "en");
        countryRepository.save(country);
        country = new Country("FO", "FAROE ISLANDS (THE)", "en");
        countryRepository.save(country);
        country = new Country("FJ", "FIJI", "en");
        countryRepository.save(country);
        country = new Country("FI", "FINLAND", "en");
        countryRepository.save(country);
        country = new Country("FR", "FRANCE", "en");
        countryRepository.save(country);
        country = new Country("GF", "FRENCH GUIANA", "en");
        countryRepository.save(country);
        country = new Country("PF", "FRENCH POLYNESIA", "en");
        countryRepository.save(country);
        country = new Country("TF", "FRENCH SOUTHERN TERRITORIES (THE)", "en");
        countryRepository.save(country);
        country = new Country("GA", "GABON", "en");
        countryRepository.save(country);
        country = new Country("GM", "GAMBIA (THE)", "en");
        countryRepository.save(country);
        country = new Country("GE", "GEORGIA", "en");
        countryRepository.save(country);
        country = new Country("DE", "GERMANY", "en");
        countryRepository.save(country);
        country = new Country("GH", "GHANA", "en");
        countryRepository.save(country);
        country = new Country("GI", "GIBRALTAR", "en");
        countryRepository.save(country);
        country = new Country("GR", "GREECE", "en");
        countryRepository.save(country);
        country = new Country("GL", "GREENLAND", "en");
        countryRepository.save(country);
        country = new Country("GD", "GRENADA", "en");
        countryRepository.save(country);
        country = new Country("GP", "GUADELOUPE", "en");
        countryRepository.save(country);
        country = new Country("GU", "GUAM", "en");
        countryRepository.save(country);
        country = new Country("GT", "GUATEMALA", "en");
        countryRepository.save(country);
        country = new Country("GG", "GUERNSEY", "en");
        countryRepository.save(country);
        country = new Country("GN", "GUINEA", "en");
        countryRepository.save(country);
        country = new Country("GW", "GUINEA-BISSAU", "en");
        countryRepository.save(country);
        country = new Country("GY", "GUYANA", "en");
        countryRepository.save(country);
        country = new Country("HT", "HAITI", "en");
        countryRepository.save(country);
        country = new Country("HM", "HEARD ISLAND AND MCDONALD ISLANDS", "en");
        countryRepository.save(country);
        country = new Country("VA", "HOLY SEE (THE)", "en");
        countryRepository.save(country);
        country = new Country("HN", "HONDURAS", "en");
        countryRepository.save(country);
        country = new Country("HK", "HONG KONG", "en");
        countryRepository.save(country);
        country = new Country("HU", "HUNGARY", "en");
        countryRepository.save(country);
        country = new Country("IS", "ICELAND", "en");
        countryRepository.save(country);
        country = new Country("IN", "INDIA", "en");
        countryRepository.save(country);
        country = new Country("ID", "INDONESIA", "en");
        countryRepository.save(country);
        country = new Country("IR", "IRAN (ISLAMIC REPUBLIC OF)", "en");
        countryRepository.save(country);
        country = new Country("IQ", "IRAQ", "en");
        countryRepository.save(country);
        country = new Country("IE", "IRELAND", "en");
        countryRepository.save(country);
        country = new Country("IM", "ISLE OF MAN", "en");
        countryRepository.save(country);
        country = new Country("IL", "ISRAEL", "en");
        countryRepository.save(country);
        country = new Country("IT", "ITALY", "en");
        countryRepository.save(country);
        country = new Country("JM", "JAMAICA", "en");
        countryRepository.save(country);
        country = new Country("JP", "JAPAN", "en");
        countryRepository.save(country);
        country = new Country("JE", "JERSEY", "en");
        countryRepository.save(country);
        country = new Country("JO", "JORDAN", "en");
        countryRepository.save(country);
        country = new Country("KZ", "KAZAKHSTAN", "en");
        countryRepository.save(country);
        country = new Country("KE", "KENYA", "en");
        countryRepository.save(country);
        country = new Country("KI", "KIRIBATI", "en");
        countryRepository.save(country);
        country = new Country("KP", "KOREA (DEMOCRATIC PEOPLE'S REPUBLIC OF)", "en");
        countryRepository.save(country);
        country = new Country("KR", "KOREA (REPUBLIC OF)", "en");
        countryRepository.save(country);
        country = new Country("XK", "KOSOVO", "en");
        countryRepository.save(country);
        country = new Country("KW", "KUWAIT", "en");
        countryRepository.save(country);
        country = new Country("KG", "KYRGYZSTAN", "en");
        countryRepository.save(country);
        country = new Country("LA", "LAO PEOPLE'S DEMOCRATIC REPUBLIC (THE)", "en");
        countryRepository.save(country);
        country = new Country("LV", "LATVIA", "en");
        countryRepository.save(country);
        country = new Country("LB", "LEBANON", "en");
        countryRepository.save(country);
        country = new Country("LS", "LESOTHO", "en");
        countryRepository.save(country);
        country = new Country("LR", "LIBERIA", "en");
        countryRepository.save(country);
        country = new Country("LY", "LIBYAN ARAB JAMAHIRIYA", "en");
        countryRepository.save(country);
        country = new Country("LI", "LIECHTENSTEIN", "en");
        countryRepository.save(country);
        country = new Country("LT", "LITHUANIA", "en");
        countryRepository.save(country);
        country = new Country("LU", "LUXEMBOURG", "en");
        countryRepository.save(country);
        country = new Country("MO", "MACAO", "en");
        countryRepository.save(country);
        country = new Country("MK", "MACEDONIA (THE FORMER YUGOSLAV REPUBLIC OF)", "en");
        countryRepository.save(country);
        country = new Country("MG", "MADAGASCAR", "en");
        countryRepository.save(country);
        country = new Country("MW", "MALAWI", "en");
        countryRepository.save(country);
        country = new Country("MY", "MALAYSIA", "en");
        countryRepository.save(country);
        country = new Country("MV", "MALDIVES", "en");
        countryRepository.save(country);
        country = new Country("ML", "MALI", "en");
        countryRepository.save(country);
        country = new Country("MT", "MALTA", "en");
        countryRepository.save(country);
        country = new Country("MH", "MARSHALL ISLANDS (THE)", "en");
        countryRepository.save(country);
        country = new Country("MQ", "MARTINIQUE", "en");
        countryRepository.save(country);
        country = new Country("MR", "MAURITANIA", "en");
        countryRepository.save(country);
        country = new Country("MU", "MAURITIUS", "en");
        countryRepository.save(country);
        country = new Country("YT", "MAYOTTE", "en");
        countryRepository.save(country);
        country = new Country("MX", "MEXICO", "en");
        countryRepository.save(country);
        country = new Country("FM", "MICRONESIA (FEDERATED STATES OF)", "en");
        countryRepository.save(country);
        country = new Country("MD", "MOLDOVA (REPUBLIC OF)", "en");
        countryRepository.save(country);
        country = new Country("MC", "MONACO", "en");
        countryRepository.save(country);
        country = new Country("MN", "MONGOLIA", "en");
        countryRepository.save(country);
        country = new Country("ME", "MONTENEGRO", "en");
        countryRepository.save(country);
        country = new Country("MS", "MONTSERRAT", "en");
        countryRepository.save(country);
        country = new Country("MA", "MOROCCO", "en");
        countryRepository.save(country);
        country = new Country("MZ", "MOZAMBIQUE", "en");
        countryRepository.save(country);
        country = new Country("MM", "MYANMAR", "en");
        countryRepository.save(country);
        country = new Country("NA", "NAMIBIA", "en");
        countryRepository.save(country);
        country = new Country("NR", "NAURU", "en");
        countryRepository.save(country);
        country = new Country("NP", "NEPAL", "en");
        countryRepository.save(country);
        country = new Country("NL", "NETHERLANDS (THE)", "en");
        countryRepository.save(country);
        country = new Country("AN", "NETHERLAND ANTILLES", "en");
        countryRepository.save(country);
        country = new Country("NC", "NEW CALEDONIA", "en");
        countryRepository.save(country);
        country = new Country("NZ", "NEW ZEALAND", "en");
        countryRepository.save(country);
        country = new Country("NI", "NICARAGUA", "en");
        countryRepository.save(country);
        country = new Country("NE", "NIGER (THE)", "en");
        countryRepository.save(country);
        country = new Country("NG", "NIGERIA", "en");
        countryRepository.save(country);
        country = new Country("NU", "NIUE", "en");
        countryRepository.save(country);
        country = new Country("NF", "NORFOLK ISLAND", "en");
        countryRepository.save(country);
        country = new Country("MP", "NORTHERN MARIANA ISLANDS (THE)", "en");
        countryRepository.save(country);
        country = new Country("NO", "NORWAY", "en");
        countryRepository.save(country);
        country = new Country("OM", "OMAN", "en");
        countryRepository.save(country);
        country = new Country("PK", "PAKISTAN", "en");
        countryRepository.save(country);
        country = new Country("PW", "PALAU", "en");
        countryRepository.save(country);
        country = new Country("PS", "PALESTINIAN TERRITORY, OCCUPIED", "en");
        countryRepository.save(country);
        country = new Country("PA", "PANAMA", "en");
        countryRepository.save(country);
        country = new Country("PG", "PAPUA NEW GUINEA", "en");
        countryRepository.save(country);
        country = new Country("PY", "PARAGUAY", "en");
        countryRepository.save(country);
        country = new Country("PE", "PERU", "en");
        countryRepository.save(country);
        country = new Country("PH", "PHILIPPINES (THE)", "en");
        countryRepository.save(country);
        country = new Country("PN", "PITCAIRN", "en");
        countryRepository.save(country);
        country = new Country("PL", "POLAND", "en");
        countryRepository.save(country);
        country = new Country("PT", "PORTUGAL", "en");
        countryRepository.save(country);
        country = new Country("PR", "PUERTO RICO", "en");
        countryRepository.save(country);
        country = new Country("QA", "QATAR", "en");
        countryRepository.save(country);
        country = new Country("RE", "REUNION", "en");
        countryRepository.save(country);
        country = new Country("RO", "ROMANIA", "en");
        countryRepository.save(country);
        country = new Country("RU", "RUSSIAN FEDERATION (THE)", "en");
        countryRepository.save(country);
        country = new Country("RW", "RWANDA", "en");
        countryRepository.save(country);
        country = new Country("BL", "SAINT BARTHÃ‰LEMY", "en");
        countryRepository.save(country);
        country = new Country("SH", "SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA", "en");
        countryRepository.save(country);
        country = new Country("KN", "SAINT KITTS AND NEVIS", "en");
        countryRepository.save(country);
        country = new Country("LC", "SAINT LUCIA", "en");
        countryRepository.save(country);
        country = new Country("MF", "SAINT MARTIN (FRENCH PART)", "en");
        countryRepository.save(country);
        country = new Country("PM", "SAINT PIERRE AND MIQUELON", "en");
        countryRepository.save(country);
        country = new Country("VC", "SAINT VINCENT AND THE GRENADINES", "en");
        countryRepository.save(country);
        country = new Country("WS", "SAMOA", "en");
        countryRepository.save(country);
        country = new Country("SM", "SAN MARINO", "en");
        countryRepository.save(country);
        country = new Country("ST", "SAO TOME AND PRINCIPE", "en");
        countryRepository.save(country);
        country = new Country("SA", "SAUDI ARABIA", "en");
        countryRepository.save(country);
        country = new Country("SN", "SENEGAL", "en");
        countryRepository.save(country);
        country = new Country("RS", "SERBIA", "en");
        countryRepository.save(country);
        country = new Country("SC", "SEYCHELLES", "en");
        countryRepository.save(country);
        country = new Country("SL", "SIERRA LEONE", "en");
        countryRepository.save(country);
        country = new Country("SG", "SINGAPORE", "en");
        countryRepository.save(country);
        country = new Country("SX", "SINT MAARTEN (DUTCH PART)", "en");
        countryRepository.save(country);
        country = new Country("SK", "SLOVAKIA", "en");
        countryRepository.save(country);
        country = new Country("SI", "SLOVENIA", "en");
        countryRepository.save(country);
        country = new Country("SB", "SOLOMON ISLANDS", "en");
        countryRepository.save(country);
        country = new Country("SO", "SOMALIA", "en");
        countryRepository.save(country);
        country = new Country("ZA", "SOUTH AFRICA", "en");
        countryRepository.save(country);
        country = new Country("GS", "SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS", "en");
        countryRepository.save(country);
        country = new Country("SS", "SOUTH SUDAN", "en");
        countryRepository.save(country);
        country = new Country("ES", "SPAIN", "en");
        countryRepository.save(country);
        country = new Country("LK", "SRI LANKA", "en");
        countryRepository.save(country);
        country = new Country("SD", "SUDAN (THE)", "en");
        countryRepository.save(country);
        country = new Country("SR", "SURINAME", "en");
        countryRepository.save(country);
        country = new Country("SJ", "SVALBARD AND JAN MAYEN", "en");
        countryRepository.save(country);
        country = new Country("SZ", "SWAZILAND", "en");
        countryRepository.save(country);
        country = new Country("SE", "SWEDEN", "en");
        countryRepository.save(country);
        country = new Country("CH", "SWITZERLAND", "en");
        countryRepository.save(country);
        country = new Country("SY", "SYRIAN ARAB REPUBLIC", "en");
        countryRepository.save(country);
        country = new Country("TW", "TAIWAN (PROVINCE OF CHINA)", "en");
        countryRepository.save(country);
        country = new Country("TJ", "TAJIKISTAN", "en");
        countryRepository.save(country);
        country = new Country("TZ", "TANZANIA, UNITED REPUBLIC OF", "en");
        countryRepository.save(country);
        country = new Country("TH", "THAILAND", "en");
        countryRepository.save(country);
        country = new Country("TL", "TIMOR-LESTE", "en");
        countryRepository.save(country);
        country = new Country("TG", "TOGO", "en");
        countryRepository.save(country);
        country = new Country("TK", "TOKELAU", "en");
        countryRepository.save(country);
        country = new Country("TO", "TONGA", "en");
        countryRepository.save(country);
        country = new Country("TT", "TRINIDAD AND TOBAGO", "en");
        countryRepository.save(country);
        country = new Country("TN", "TUNISIA", "en");
        countryRepository.save(country);
        country = new Country("TR", "TURKEY", "en");
        countryRepository.save(country);
        country = new Country("TM", "TURKMENISTAN", "en");
        countryRepository.save(country);
        country = new Country("TC", "TURKS AND CAICOS ISLANDS (THE)", "en");
        countryRepository.save(country);
        country = new Country("TV", "TUVALU", "en");
        countryRepository.save(country);
        country = new Country("UG", "UGANDA", "en");
        countryRepository.save(country);
        country = new Country("UA", "UKRAINE", "en");
        countryRepository.save(country);
        country = new Country("AE", "UNITED ARAB EMIRATES (THE)", "en");
        countryRepository.save(country);
        country = new Country("GB", "UNITED KINGDOM OF GREAT BRITAIN AND NORTHERN IRELAND (THE)", "en");
        countryRepository.save(country);
        country = new Country("US", "UNITED STATES OF AMERICA (THE)", "en");
        countryRepository.save(country);
        country = new Country("UM", "UNITED STATES MINOR OUTLYING ISLANDS (THE)", "en");
        countryRepository.save(country);
        country = new Country("UY", "URUGUAY", "en");
        countryRepository.save(country);
        country = new Country("UZ", "UZBEKISTAN", "en");
        countryRepository.save(country);
        country = new Country("VU", "VANUATU", "en");
        countryRepository.save(country);
        country = new Country("VE", "VENEZUELA (BOLIVARIAN REPUBLIC OF)", "en");
        countryRepository.save(country);
        country = new Country("VN", "VIET NAM", "en");
        countryRepository.save(country);
        country = new Country("VG", "VIRGIN ISLANDS (BRITISH)", "en");
        countryRepository.save(country);
        country = new Country("VI", "VIRGIN ISLANDS (U.S.)", "en");
        countryRepository.save(country);
        country = new Country("WF", "WALLIS AND FUTUNA", "en");
        countryRepository.save(country);
        country = new Country("EH", "WESTERN SAHARA", "en");
        countryRepository.save(country);
        country = new Country("YE", "YEMEN", "en");
        countryRepository.save(country);
        country = new Country("ZM", "ZAMBIA", "en");
        countryRepository.save(country);
        country = new Country("ZW", "ZIMBABWE", "en");
        countryRepository.save(country);


        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("AIRQ", "abandoned airfield", "abandoned airfield", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CMPQ", "abandoned camp", "abandoned camp", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CNLQ", "abandoned canal", "abandoned canal", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MFGQ", "abandoned factory", "abandoned factory", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FRMQ", "abandoned farm", "abandoned farm", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNQ", "abandoned mine", "abandoned mine", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MSSNQ", "abandoned mission", "abandoned mission", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("OILQ", "abandoned oil well", "abandoned oil well", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPQ", "abandoned police post", "abandoned police post", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPLQ", "abandoned populated place", "abandoned populated place", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PRNQ", "abandoned prison", "abandoned prison", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RRQ", "abandoned railroad", "abandoned railroad", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RSTNQ", "abandoned railroad station", "abandoned railroad station", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RSTPQ", "abandoned railroad stop", "abandoned railroad stop", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STMQ", "abandoned watercourse", "a former stream or distributary no longer carrying flowing water, but still evident due to lakes, wetland, topographic or vegetation patterns", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WLLQ", "abandoned well", "abandoned well", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ADMD", "administrative division", "an administrative division of a political entity, undifferentiated as to administrative level", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ADMF", "administrative facility", "a government building", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("AGRC", "agricultural colony", "a tract of land set aside for agricultural settlement", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("AGRF", "agricultural facility", "a building and/or tract of land used for improving agriculture", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RESA", "agricultural reserve", "a tract of land reserved for agricultural reclamation and/or development", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SCHA", "agricultural school", "º", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("AIRB", "airbase", "an area used to store supplies, provide barracks for air force personnel, hangars and runways for aircraft, and from which operations are initiated", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("AIRF", "airfield", "a place on land where aircraft land and take off; no facilities provided for the commercial handling of passengers and cargo", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("AIRP", "airport", "a place where aircraft regularly land and take off, with runways, navigational aids, and major facilities for the commercial handling of passengers and cargo", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("AMTH", "amphitheater", "an oval or circular structure with rising tiers of seats about a stage or open space", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STMA", "anabranch", "a diverging branch flowing out of a main stream and rejoining it downstream", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ANCH", "anchorage", "an area where vessels may anchor", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RDA", "ancient road", "the remains of a road used by ancient cultures", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ANS", "ancient site", "a place where archeological remains, old structures, or cultural artifacts are located", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WALLA", "ancient wall", "the remains of a linear defensive stone structure", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BLDA", "apartment building", "a building containing several individual apartments", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("AQC", "aquaculture facility", "facility or area for the cultivation of aquatic animals and plants, especially fish, shellfish, and seaweed, in natural or controlled marine or freshwater environments; underwater agriculture", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CNLA", "aqueduct", "a conduit used to carry water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ARCH", "arch", "a natural or man-made structure in the form of an arch", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LAND", "Arctic land", "a tract of land in the Arctic", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("AREA", "area", "a tract of land without homogeneous character or boundaries", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ISLF", "artificial island", "an island created by landfill or diking and filling in a wetland, bay, or lagoon", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RNGA", "artillery range", "a tract of land used for artillery firing practice", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ASPH", "asphalt lake", "a small basin containing naturally occurring asphalt", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ASTR", "astronomical station", "a point on the earth whose position has been determined by observations of celestial bodies", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ASYL", "asylum", "a facility where the insane are cared for and protected", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ATHF", "athletic field", "a tract of land used for playing team sports, and athletic track and field events", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ATOL", "atoll(s)", "a ring-shaped coral reef which has closely spaced islands on it encircling a lagoon", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CTRA", "atomic center", "a facility where atomic research is carried out", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BDLD", "badlands", "an area characterized by a maze of very closely spaced, deep, narrow, steep-sided ravines, and sharp crests and pinnacles", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BSTN", "baling station", "a facility for baling agricultural products", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ESTB", "banana plantation", "an estate that specializes in the growing of bananas", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BAN", "bank", "an establishment for the custody, loan, exchange or issue of money, for the extension of credit, and for facilitating the transmission of funds", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BNK", "bank(s)", "an elevation, typically located on a shelf, over which the depth of water is relatively shallow but sufficient for most surface navigation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BAR", "bar", "a shallow ridge or mound of coarse unconsolidated material in a stream channel, at the mouth of a stream, estuary, or lagoon and in the wave-break zone along coasts", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BRKS", "barracks", "a building for lodging military personnel", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BTL", "battlefield", "a site of a land battle of historical importance", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BAY", "bay", "a coastal indentation between two capes or headlands, larger than a cove but smaller than a gulf", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BAYS", "bays", "coastal indentations between two capes or headlands, larger than a cove but smaller than a gulf", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BCH", "beach", "a shore zone of coarse unconsolidated sediment that extends from the low-water line to the highest reach of storm waves", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RDGB", "beach ridge", "a ridge of sand just inland and parallel to the beach, usually in series", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BCHS", "beaches", "a shore zone of coarse unconsolidated sediment that extends from the low-water line to the highest reach of storm waves", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BCN", "beacon", "a fixed artificial navigation mark", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BNCH", "bench", "a long, narrow bedrock platform bounded by steeper slopes above and below, usually overlooking a waterbody", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BGHT", "bight(s)", "an open body of water forming a slight recession in a coastline", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BLHL", "blowhole(s)", "a hole in coastal rock through which sea water is forced by a rising tide or waves and spurted through an outlet into the air", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BLOW", "blowout(s)", "a small depression in sandy terrain, caused by wind erosion", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BTYD", "boatyard", "a waterside facility for servicing, repairing, and building small vessels", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BOG", "bog(s)", "a wetland characterized by peat forming sphagnum moss, sedge, and other acid-water plants", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PSTB", "border post", "a post or station at an international boundary for the regulation of movement of people and goods", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BLDR", "boulder field", "a high altitude or high latitude bare, flat area covered with large angular rocks", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BP", "boundary marker", "a fixture marking a point along a boundary", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BRKW", "breakwater", "a structure erected to break the force of waves at the entrance to a harbor or port", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MFGB", "brewery", "one or more buildings where beer is brewed", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BDG", "bridge", "a structure erected across an obstacle such as a stream, road, etc., in order to carry roads, railroads, and pedestrians across", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ZNB", "buffer zone", "a zone recognized as a buffer between two nations in which military presence is minimal or absent", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BLDG", "building(s)", "a structure built for permanent use, as a house, factory, etc.", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BUR", "burial cave(s)", "a cave used for human burials", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BUSH", "bush(es)", "a small clump of conspicuous bushes in an otherwise bare area", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CTRB", "business center", "a place where a number of businesses are located", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BUTE", "butte(s)", "a small, isolated, usually flat-topped hill with steep sides", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CARN", "cairn", "a heap of stones erected as a landmark or for other purposes", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CLDA", "caldera", "a depression measuring kilometers across formed by the collapse of a volcanic mountain", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CMP", "camp(s)", "a site occupied by tents, huts, or other shelters for temporary use", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CNL", "canal", "an artificial watercourse", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CNLB", "canal bend", "a conspicuously curved or bent section of a canal", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TNLC", "canal tunnel", "a tunnel through which a canal passes", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STMC", "canalized stream", "a stream that has been substantially ditched, diked, or straightened", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MFGC", "cannery", "a building where food items are canned", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CNYN", "canyon", "a deep, narrow valley with steep sides cutting into a plateau or mountainous area", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CAPE", "cape", "a land area, more prominent than a point, projecting into the sea and marking a notable change in coastal direction", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPLC", "capital of a political entity", "capital of a political entity", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RTE", "caravan route", "the route taken by caravans", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CSNO", "casino", "a building used for entertainment, especially gambling", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CSTL", "castle", "a large fortified building or set of buildings", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TNKD", "cattle dipping tank", "a small artificial pond used for immersing cattle in chemically treated water for disease control", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CSWY", "causeway", "a raised roadway across wet ground or shallow water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CAVE", "cave(s)", "an underground passageway or chamber, or cavity on the side of a cliff", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CMTY", "cemetery", "a burial place or ground", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CHN", "channel", "the deepest part of a stream, bay, lagoon, or strait, through which the main current flows", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNCR", "chrome mine(s)", "a mine where chrome ore is extracted", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CH", "church", "a building for public Christian worship", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CRQ", "cirque", "a bowl-like hollow partially surrounded by cliffs or steep slopes at the head of a glaciated valley", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CRQS", "cirques", "bowl-like hollows partially surrounded by cliffs or steep slopes at the head of a glaciated valley", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CLG", "clearing", "an area in a forest with trees removed", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CFT", "cleft(s)", "a deep narrow slot, notch, or groove in a coastal cliff", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CLF", "cliff(s)", "a high, steep to perpendicular slope overlooking a waterbody or lower area", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HSPC", "clinic", "a medical facility associated with a hospital for outpatients", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNC", "coal mine(s)", "a mine where coal is extracted", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("COLF", "coalfield", "a region in which coal deposits of possible economic value occur", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CST", "coast", "a zone of variable width straddling the shoreline", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STNC", "coast guard station", "a facility from which the coast is guarded by armed vessels", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GRVC", "coconut grove", "a planting of coconut trees", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SCHC", "college", "the grounds and buildings of an institution of higher learning", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CMN", "common", "a park or pasture for community use", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("COMC", "communication center", "a facility, including buildings, antennae, towers and electronic equipment for receiving and transmitting information", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CTRCM", "community center", "a facility for community recreation and other activities", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CNS", "concession area", "a lease of land by a government for economic development, e.g., mining, forestry", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CONE", "cone(s)", "a conical landform composed of mud or volcanic material", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CNFL", "confluence", "a place where two or more streams or intermittent streams flow together", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CRSU", "continental rise", "a gentle slope rising from oceanic depths towards the foot of a continental slope", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CVNT", "convent", "a building where a community of nuns lives in seclusion", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNCU", "copper mine(s)", "a mine where copper ore is extracted", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MFGCU", "copper works", "a facility for processing copper ore", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RFC", "coral reef(s)", "a surface-navigation hazard composed of coral", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CRRL", "corral(s)", "a pen or enclosure for confining or capturing animals", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CRDR", "corridor", "a strip or area of land having significance as an access way", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ESTC", "cotton plantation", "an estate specializing in the cultivation of cotton", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HSEC", "country house", "a large house, mansion, or chateau, on a large estate", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CTHSE", "courthouse", "a building in which courts of law are held", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("COVE", "cove(s)", "a small coastal indentation, smaller than a bay", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LKC", "crater lake", "a lake in a crater or caldera", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LKSC", "crater lakes", "lakes in a crater or caldera", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CRTR", "crater(s)", "a generally circular saucer or bowl-shaped depression caused by volcanic or meteorite explosive action", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CUET", "cuesta(s)", "an asymmetric ridge formed on tilted strata", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CULT", "cultivated area", "an area under cultivation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CRNT", "current", "a horizontal flow of water in a given direction with uniform velocity", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CSTM", "customs house", "a building in a port where customs and duties are paid, and where vessels are entered and cleared", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PSTC", "customs post", "a building at an international boundary where customs and duties are paid on goods", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CUTF", "cutoff", "a channel formed as a result of a stream cutting through a meander neck", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DARY", "dairy", "a facility for the processing, sale and distribution of milk or milk products", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DAM", "dam", "a barrier constructed across a stream to impound water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DEPU", "deep", "a localized deep area within the confines of a larger feature, such as a trough, basin or trench", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DLTA", "delta", "a flat plain formed by alluvial deposits at the mouth of a stream", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PCLD", "dependent political entity", "dependent political entity", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DPR", "depression(s)", "a low area surrounded by higher land and usually characterized by interior drainage", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DSRT", "desert", "a large area with little or no vegetation due to extreme environmental conditions", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPLW", "destroyed populated place", "a village, town or city destroyed by a natural disaster, or by war", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNDT", "diatomite mine(s)", "a place where diatomaceous earth is extracted", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DIKE", "dike", "an earth or stone embankment usually constructed for flood or stream control", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DIP", "diplomatic facility", "office, residence, or facility of a foreign government, which may include an embassy, consulate, chancery, office of charge dâ€™affaires, or other diplomatic, economic, military, or cultural mission", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HSPD", "dispensary", "a building where medical or dental aid is dispensed", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STMD", "distributary(-ies)", "a branch which flows away from the main stream, as in a delta or irrigation canal", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DTCH", "ditch", "a small artificial watercourse dug for draining or irrigating the land", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DTCHM", "ditch mouth(s)", "an area where a drainage ditch enters a lagoon, lake or bay", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DVD", "divide", "a line separating adjacent drainage basins", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DCK", "dock(s)", "a waterway between two piers, or cut into the land for the berthing of ships", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DCKB", "docking basin", "a part of a harbor where ships dock", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DCKY", "dockyard", "a facility for servicing, building, or repairing ships", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BSND", "drainage basin", "an area drained by a stream", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CNLD", "drainage canal", "an artificial waterway carrying water away from a wetland or from drainage ditches", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DTCHD", "drainage ditch", "a ditch which serves to drain the land", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DCKD", "dry dock", "a dock providing support for a vessel, and means for removing the water so that the bottom of the vessel can be exposed", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SBED", "dry stream bed", "a channel formerly containing the water of a stream", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DUNE", "dune(s)", "a wave form, ridge or star shape feature composed of sand", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RGNE", "economic region", "a region of a country established for economic development or for statistical purposes", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SCRP", "escarpment", "a long line of cliffs or steep slopes separating level surfaces above and below", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("EST", "estate(s)", "a large commercialized agricultural landholding with associated buildings and other facilities", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ESTY", "estuary", "a funnel-shaped stream mouth or embayment where fresh water mixes with sea water under tidal influences", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STNE", "experiment station", "a facility for carrying out experiments", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FCL", "facility", "a building or buildings housing a center, institute, foundation, hospital, prison, mission, courthouse, etc.", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CTRF", "facility center", "a place where more than one facility is situated", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MFG", "factory", "one or more buildings where goods are manufactured, processed or fabricated", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FAN", "fan(s)", "a fan-shaped wedge of coarse alluvium with apex merging with a mountain stream bed and the fan spreading out at a low angle slope onto an adjacent plain", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FRM", "farm", "a tract of land with associated buildings devoted to agriculture", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPLF", "farm village", "a populated place where the population is largely engaged in agricultural activities", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FRMS", "farms", "tracts of land with associated buildings devoted to agriculture", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FRMT", "farmstead", "the buildings and adjacent service areas of a farm", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FY", "ferry", "a boat or other floating conveyance and terminal facilities regularly used to transport people and vehicles across a waterbody", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FYT", "ferry terminal", "a place where ferries pick-up and discharge passengers, vehicles and or cargo", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FLD", "field(s)", "an open as opposed to wooded area", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FIRE", "fire station", "building housing firefighters and/or fire fighting equipment", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ADM1", "first-order administrative division", "a primary administrative division of a country, such as a state in the United States", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FISH", "fishing area", "a fishing ground, bank or area where fishermen go to catch fish", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PNDSF", "fishponds", "ponds or enclosures in which fish are kept or raised", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FSR", "fissure", "a crack associated with volcanism", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FJD", "fjord", "a long, narrow, steep-walled, deep-water arm of the sea at high latitudes, usually along mountainous coasts", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FJDS", "fjords", "long, narrow, steep-walled, deep-water arms of the sea at high latitudes, usually along mountainous coasts", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FORD", "ford", "a shallow part of a stream which can be crossed on foot or by land vehicle", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RESF", "forest reserve", "a forested area set aside for preservation or controlled use", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STNF", "forest station", "a collection of buildings and facilities for carrying out forest management", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FRST", "forest(s)", "an area dominated by tree vegetation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("INLTQ", "former inlet", "an inlet which has been filled in, or blocked by deposits", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MLSGQ", "former sugar mill", "a sugar mill no longer used as a sugar mill", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FT", "fort", "a defensive structure or earthworks", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FRSTF", "fossilized forest", "a forest fossilized by geologic processes and now exposed at the earth's surface", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FNDY", "foundry", "a building or works where metal casting is carried out", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ADM4", "fourth-order administrative division", "a subdivision of a third-order administrative division", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ZNF", "free trade zone", "an area, usually a section of a port, where goods may be received and shipped free of customs duty and of most customs regulations", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PCLF", "freely associated state", "freely associated state", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DPOF", "fuel depot", "an area where fuel is stored", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GAP", "gap", "a low place in a ridge, not used for transportation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GDN", "garden(s)", "an enclosure for displaying selected plant or animal life", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GOSP", "gas-oil separator plant", "a facility for separating gas from oil", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GASF", "gasfield", "an area containing a subterranean store of natural gas of economic value", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GATE", "gate", "a controlled access entrance or exit", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GYSR", "geyser", "a type of hot spring with intermittent eruptions of jets of hot water and steam", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GHAT", "ghÄt", "a set of steps leading to a river, which are of religious significance, and at their base is usually a platform for bathing", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GLCR", "glacier(s)", "a mass of ice, usually at high latitudes or high elevations, with sufficient thickness to flow away from the source area in lobes, tongues, or masses", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNAU", "gold mine(s)", "a mine where gold ore, or alluvial gold is extracted", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RECG", "golf course", "a recreation field where golf is played", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GRGE", "gorge(s)", "a short, narrow, steep-sided section of a stream valley", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GRSLD", "grassland", "an area dominated by grass vegetation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GRVE", "grave", "a burial site", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GVL", "gravel area", "an area covered with gravel", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GRAZ", "grazing area", "an area of grasses and shrubs used for grazing", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GHSE", "guest house", "a house used to provide lodging for paying guests", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GULF", "gulf", "a large recess in the coastline, larger than a bay", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HLT", "halting place", "a place where caravans stop for rest", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HMCK", "hammock(s)", "a patch of ground, distinct from and slightly above the surrounding plain or wetland. Often occurs in groups", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("AIRG", "hangar", "a covered and usually enclosed area for housing and repairing aircraft", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("VALG", "hanging valley", "a valley the floor of which is notably higher than the valley or shore to which it leads; most common in areas that have been glaciated", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HBR", "harbor(s)", "a haven or space of deep water so sheltered by the adjacent land as to afford a safe anchorage for ships", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HDLD", "headland", "a high projection of land extending into a large body of water beyond the line of the coast", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STMH", "headwaters", "the source and upper part of a stream, including the upper drainage basin", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HTH", "heath", "an upland moor or sandy area dominated by low shrubby vegetation including heather", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("AIRH", "heliport", "a place where helicopters land and take off", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HERM", "hermitage", "a secluded residence, usually for religious sects", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HLL", "hill", "a rounded elevation of limited extent rising above the surrounding land with local relief of less than 300m", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HLLS", "hills", "rounded elevations of limited extent rising above the surrounding land with local relief of less than 300m", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ADMDH", "historical administrative division", "a former administrative division of a political entity, undifferentiated as to administrative level", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ADM1H", "historical first-order administrative division", "a former first-order administrative division", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ADM4H", "historical fourth-order administrative division", "a former fourth-order administrative division", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PCLH", "historical political entity", "a former political entity", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPLH", "historical populated place", "a populated place that no longer exists", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RRH", "historical railroad", "a former permanent twin steel-rail track on which freight and passenger cars move long distances", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RSTNH", "historical railroad station", "a former facility comprising ticket office, platforms, etc. for loading and unloading train passengers and freight", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RGNH", "historical region", "a former area distinguished by one or more observable physical or cultural characteristics", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ADM2H", "historical second-order administrative division", "a former second-order administrative division", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HSTS", "historical site", "a place of historical importance", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ADM3H", "historical third-order administrative division", "a former third-order administrative division", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("UFHU", "historical undersea feature", "an undersea feature whose existence has been subsequently disproved", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HMSD", "homestead", "a residence, owner's or manager's, on a sheep or cattle station, woolshed, outcamp, or Aboriginal outstation, specific to Australia and New Zealand", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HSP", "hospital", "a building in which sick or injured, especially those confined to bed, are medically treated", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SPNT", "hot spring(s)", "a place where hot ground water flows naturally out of the ground", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HTL", "hotel", "a building providing lodging and/or meals for the public", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HSE", "house(s)", "a building used as a human habitation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DEVH", "housing development", "a tract of land on which many houses of similar design are built according to a development plan", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RESH", "hunting reserve", "a tract of land used primarily for hunting", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HUT", "hut", "a small primitive house", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HUTS", "huts", "small primitive houses", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PSH", "hydroelectric power station", "a building where electricity is generated from water power", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CAPG", "icecap", "a dome-shaped mass of glacial ice covering an area of mountain summits or other high lands; smaller than an ice sheet", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DPRG", "icecap depression", "a comparatively depressed area on an icecap", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DOMG", "icecap dome", "a comparatively elevated area on an icecap", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RDGG", "icecap ridge", "a linear elevation on an icecap", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PCLI", "independent political entity", "independent political entity", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("INDS", "industrial area", "an area characterized by industrial activity", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("INLT", "inlet", "a narrow waterway extending into the land, or connecting a bay or lagoon with a larger body of water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STNI", "inspection station", "a station at which vehicles, goods, and people are inspected", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TRGD", "interdune trough(s)", "a long wind-swept trough between parallel longitudinal dunes", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("INTF", "interfluve", "a relatively undissected upland between adjacent stream valleys", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LKI", "intermittent lake", "intermittent lake", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LKSI", "intermittent lakes", "intermittent lakes", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LKOI", "intermittent oxbow lake", "intermittent oxbow lake", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PNDI", "intermittent pond", "intermittent pond", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PNDSI", "intermittent ponds", "intermittent ponds", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("POOLI", "intermittent pool", "intermittent pool", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RSVI", "intermittent reservoir", "intermittent reservoir", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LKNI", "intermittent salt lake", "intermittent salt lake", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LKSNI", "intermittent salt lakes", "intermittent salt lakes", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PNDNI", "intermittent salt pond(s)", "intermittent salt pond(s)", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STMI", "intermittent stream", "intermittent stream", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WTLDI", "intermittent wetland", "intermittent wetland", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RDIN", "intersection", "a junction of two or more highways by a system of separate levels that permit traffic to pass from one to another without the crossing of traffic streams", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNFE", "iron mine(s)", "a mine where iron ore is extracted", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FLDI", "irrigated field(s)", "a tract of level or terraced land which is irrigated", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CNLI", "irrigation canal", "a canal which serves as a main conduit for irrigation water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DTCHI", "irrigation ditch", "a ditch which serves to distribute irrigation water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SYSI", "irrigation system", "a network of ditches and one or more of the following elements: water supply, reservoir, canal, pump, well, drain, etc.", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ISL", "island", "a tract of land, smaller than a continent, surrounded by water at high water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ISLS", "islands", "tracts of land, smaller than a continent, surrounded by water at high water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STLMT", "Israeli settlement", "Israeli settlement", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ISTH", "isthmus", "a narrow strip of land connecting two larger land masses and bordered by water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("JTY", "jetty", "a structure built out into the water at a river mouth or harbor entrance to regulate currents and silting", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("KRST", "karst area", "a distinctive landscape developed on soluble rock such as limestone characterized by sinkholes, caves, disappearing streams, and underground drainage", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CMPLA", "labor camp", "a camp used by migrant or temporary laborers", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LGN", "lagoon", "a shallow coastal waterbody, completely or partly separated from a larger body of water by a barrier island, coral reef or other depositional feature", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LGNS", "lagoons", "shallow coastal waterbodies, completely or partly separated from a larger body of water by a barrier island, coral reef or other depositional feature", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LK", "lake", "a large inland body of standing water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LBED", "lake bed(s)", "a dried up or drained area of a former lake", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CHNL", "lake channel(s)", "that part of a lake having water deep enough for navigation between islands, shoals, etc.", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RGNL", "lake region", "a tract of land distinguished by numerous lakes", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LKS", "lakes", "large inland bodies of standing water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ISLT", "land-tied island", "a coastal island connected to the mainland by barrier beaches, levees or dikes", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LNDF", "landfill", "a place for trash and garbage disposal in which the waste is buried between layers of earth to build up low-lying land", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LDNG", "landing", "a place where boats receive or discharge passengers and freight, but lacking most port facilities", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LAVA", "lava area", "an area of solidified lava", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNPB", "lead mine(s)", "a mine where lead ore is extracted", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LTER", "leased area", "a tract of land leased by the United Kingdom from the People's Republic of China to form part of Hong Kong", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LEPC", "leper colony", "a settled area inhabited by lepers in relative isolation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HSPL", "leprosarium", "an asylum or hospital for lepers", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LEV", "levee", "a natural low embankment bordering a distributary or meandering stream; often built up artificially to control floods", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LTHSE", "lighthouse", "a distinctive structure exhibiting a major navigation light", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MFGLM", "limekiln", "a furnace in which limestone is reduced to lime", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GOVL", "local government office", "a facility housing local governmental offices, usually a city, town, or village hall", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LCTY", "locality", "a minor area or place of unspecified or mixed character and indefinite boundaries", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LOCK", "lock(s)", "a basin in a waterway with gates at each end by means of which vessels are passed from one water level to another", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CMPL", "logging camp", "a camp used by loggers", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STMSB", "lost river", "a surface stream that disappears into an underground channel, or dries up in an arid area", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MVA", "maneuver area", "a tract of land where military field exercises are carried out", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ISLM", "mangrove island", "a mangrove swamp surrounded by a waterbody", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MGV", "mangrove swamp", "a tropical tidal mud flat characterized by mangrove vegetation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MAR", "marina", "a harbor facility for small boats, yachts, etc.", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CHNM", "marine channel", "that part of a body of water deep enough for navigation through an area otherwise not suitable", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SCHN", "maritime school", "a school at which maritime sciences form the core of the curriculum", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MKT", "market", "a place where goods are bought and sold at regular intervals", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MRSH", "marsh(es)", "a wetland dominated by grass-like vegetation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MDW", "meadow", "a small, poorly drained area dominated by grassy vegetation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("NKM", "meander neck", "a narrow strip of land between the two limbs of a meander loop at its narrowest point", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CTRM", "medical center", "a complex of health care buildings including two or more of the following: hospital, medical school, clinic, pharmacy, doctor's offices, etc.", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MESA", "mesa(s)", "a flat-topped, isolated elevation with steep slopes on all sides, less extensive than a plateau", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STNM", "meteorological station", "a station at which weather elements are recorded", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MILB", "military base", "a place used by an army or other armed service for storing arms and supplies, and for accommodating and training troops, a base from which operations can be initiated", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("INSM", "military installation", "a facility for use of and control by armed forces", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SCHM", "military school", "a school at which military science forms the core of the curriculum", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ML", "mill(s)", "a building housing machines for transforming, shaping, finishing, grinding, or extracting products", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MN", "mine(s)", "a site where mineral ores are extracted from the ground by excavating surface pits and subterranean passages", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNA", "mining area", "an area of mine sites where minerals and ores are extracted", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CMPMN", "mining camp", "a camp used by miners", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MSSN", "mission", "a place characterized by dwellings, school, church, hospital and other facilities operated by a religious group for the purpose of providing charitable services and to propagate religion", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MOLE", "mole", "a massive structure of masonry or large stones serving as a pier or breakwater", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MSTY", "monastery", "a building and grounds where a community of monks lives in seclusion", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNMT", "monument", "a commemorative structure or statue", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MOOR", "moor(s)", "an area of open ground overlaid with wet peaty soils", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MRN", "moraine", "a mound, ridge, or other accumulation of glacial till", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MSQE", "mosque", "a building for public Islamic worship", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MND", "mound(s)", "a low, isolated, rounded hill", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MT", "mountain", "an elevation standing high above the surrounding area with small summit area, steep slopes and local relief of 300m or more", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MTS", "mountains", "a mountain range or a group of mountains or high ridges", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FLTM", "mud flat(s)", "a relatively level area of mud either between high and low tide lines, or subject to flooding", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MFGM", "munitions plant", "a factory where ammunition is made", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MUS", "museum", "a building where objects of permanent interest in one or more of the arts and sciences are preserved and exhibited", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("NRWS", "narrows", "a navigable narrow part of a bay, strait, river, etc.", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TNLN", "natural tunnel", "a cave that is open at both ends", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RESN", "nature reserve", "an area reserved for the maintenance of a natural habitat", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("NVB", "naval base", "an area used to store supplies, provide barracks for troops and naval personnel, a port for naval vessels, and from which operations are initiated", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CNLN", "navigation canal(s)", "a watercourse constructed for navigation of vessels", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CHNN", "navigation channel", "a buoyed channel of sufficient depth for the safe navigation of vessels", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNNI", "nickel mine(s)", "a mine where nickel ore is extracted", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("NOV", "novitiate", "a religious house or school where novices are trained", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PSN", "nuclear power station", "nuclear power station", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("NTK", "nunatak", "a rock or mountain peak protruding through glacial ice", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("NTKS", "nunataks", "rocks or mountain peaks protruding through glacial ice", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("NSY", "nursery(-ies)", "a place where plants are propagated for transplanting or grafting", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("OAS", "oasis(-es)", "an area in a desert made productive by the availability of water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("OBPT", "observation point", "a wildlife or scenic observation point", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("OBS", "observatory", "a facility equipped for observation of atmospheric or space phenomena", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("OCN", "ocean", "one of the major divisions of the vast expanse of salt water covering part of the earth", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BLDO", "office building", "commercial building where business and/or services are conducted", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CMPO", "oil camp", "a camp used by oilfield workers", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ESTO", "oil palm plantation", "an estate specializing in the cultivation of oil palm trees", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("OILP", "oil pipeline", "a pipeline used for transporting oil", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("OILJ", "oil pipeline junction", "a section of an oil pipeline where two or more pipes join together", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TRMO", "oil pipeline terminal", "a tank farm or loading facility at the end of an oil pipeline", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PMPO", "oil pumping station", "a facility for pumping oil through a pipeline", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("OILR", "oil refinery", "a facility for converting crude oil into refined petroleum products", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("OILW", "oil well", "a well from which oil may be pumped", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("OILF", "oilfield", "an area containing a subterranean store of petroleum of economic value", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GRVO", "olive grove", "a planting of olive trees", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MLO", "olive oil mill", "a mill where oil is extracted from olives", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("OCH", "orchard(s)", "a planting of fruit or nut trees", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MLM", "ore treatment plant", "a facility for improving the metal content of ore by concentration", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("OVF", "overfalls", "an area of breaking waves caused by the meeting of currents or by waves moving against the current", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LKO", "oxbow lake", "a crescent-shaped lake commonly found adjacent to meandering streams", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PGDA", "pagoda", "a tower-like storied structure, usually a Buddhist shrine", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PAL", "palace", "a large stately house, often a royal or presidential residence", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GRVP", "palm grove", "a planting of palm trees", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RESP", "palm tree reserve", "an area of palm trees where use is controlled", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PAN", "pan", "a near-level shallow, natural depression or basin, usually containing an intermittent lake, pond, or pool", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PANS", "pans", "a near-level shallow, natural depression or basin, usually containing an intermittent lake, pond, or pool", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PRSH", "parish", "an ecclesiastical district", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PRK", "park", "an area, often of forested land, maintained as a place of beauty, or for recreation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PRKGT", "park gate", "a controlled access to a park", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PRKHQ", "park headquarters", "a park administrative facility", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GARG", "parking garage", "a building or underground facility used exclusively for parking vehicles", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PKLT", "parking lot", "an area used for parking vehicles", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PASS", "pass", "a break in a mountain range or other high obstruction, used for transportation from one side to the other [See also gap]", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PSTP", "patrol post", "a post from which patrols are sent out", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PK", "peak", "a pointed elevation atop a mountain, ridge, or other hypsographic feature", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PKS", "peaks", "pointed elevations atop a mountain, ridge, or other hypsographic features", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PEAT", "peat cutting area", "an area where peat is harvested", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PEN", "peninsula", "an elongate area of land projecting into a body of water and nearly surrounded by water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BSNP", "petroleum basin", "an area underlain by an oil-rich structural basin", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MFGPH", "phosphate works", "a facility for producing fertilizer", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PIER", "pier", "a structure built out into navigable water on piles providing berthing for ships and recreation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GRVPN", "pine grove", "a planting of pine trees", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNPL", "placer mine(s)", "a place where heavy metals are concentrated and running water is used to extract them from unconsolidated sediments", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PLN", "plain(s)", "an extensive area of comparatively level to gently undulating land, lacking surface irregularities, and usually adjacent to a higher area", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PLAT", "plateau", "an elevated plain with steep slopes on one or more sides, and often with incised streams", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PT", "point", "a tapering piece of land projecting into a body of water, less prominent than a cape", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PTS", "points", "tapering pieces of land projecting into a body of water, less prominent than a cape", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PLDR", "polder", "an area reclaimed from the sea by diking and draining", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PP", "police post", "a building in which police are stationed", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PCL", "political entity", "political entity", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PND", "pond", "a small standing waterbody", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PNDS", "ponds", "small standing waterbodies", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("POOL", "pool(s)", "a small and comparatively still, deep part of a larger body of water such as a stream or harbor; or a small body of standing water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPLL", "populated locality", "an area similar to a locality but with a small group of dwellings or other buildings", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPL", "populated place", "a city, town, village, or other agglomeration of buildings where people live and work", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPLS", "populated places", "cities, towns, villages, or other agglomerations of buildings where people live and work", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PRT", "port", "a place provided with terminal and transfer facilities for loading and discharging waterborne cargo or passengers, usually located in a harbor", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PTGE", "portage", "a place where boats, goods, etc., are carried overland between navigable waters", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PO", "post office", "a public building in which mail is received, sorted and distributed", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PS", "power station", "a facility for generating electric power", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PRN", "prison", "a facility for confining prisoners", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PRMN", "promenade", "a place for public walking, usually along a beach front", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PROM", "promontory(-ies)", "a bluff or prominent hill overlooking or projecting into a lowland", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PYR", "pyramid", "an ancient massive structure of square ground plan with four triangular faces meeting at a point and used for enclosing tombs", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PYRS", "pyramids", "ancient massive structures of square ground plan with four triangular faces meeting at a point and used for enclosing tombs", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNQR", "quarry(-ies)", "a surface mine where building stone or gravel and sand, etc. are extracted", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("QUAY", "quay", "a structure of solid construction along a shore or bank which provides berthing for ships and which generally provides cargo handling facilities", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("QCKS", "quicksand", "an area where loose sand with water moving through it may become unstable when heavy objects are placed at the surface, causing them to sink", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RECR", "racetrack", "a track where races are held", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("OBSR", "radio observatory", "a facility equipped with an array of antennae for receiving radio waves from space", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STNR", "radio station", "a facility for producing and transmitting information by radio waves", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RR", "railroad", "a permanent twin steel-rail track on which freight and passenger cars move long distances", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RJCT", "railroad junction", "a place where two or more railroad tracks join", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RSD", "railroad siding", "a short track parallel to and joining the main track", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RSGNL", "railroad signal", "a signal at the entrance of a particular section of track governing the movement of trains", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RSTN", "railroad station", "a facility comprising ticket office, platforms, etc. for loading and unloading train passengers and freight", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RSTP", "railroad stop", "a place lacking station facilities where trains stop to pick up and unload passengers and freight", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TNLRR", "railroad tunnel", "a tunnel through which a railroad passes", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RYD", "railroad yard", "a system of tracks used for the making up of trains, and switching and storing freight cars", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RNCH", "ranch(es)", "a large farm specializing in extensive grazing of livestock", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RPDS", "rapids", "a turbulent section of a stream associated with a steep, irregular stream bed", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RVN", "ravine(s)", "a small, narrow, deep, steep-sided stream channel, smaller than a gorge", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RCH", "reach", "a straight section of a navigable stream or channel between two bends", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RF", "reef(s)", "a surface-navigation hazard composed of consolidated material", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PRNJ", "reformatory", "a facility for confining, training, and reforming young law offenders", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CMPRF", "refugee camp", "a camp used by refugees", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RGN", "region", "an area distinguished by one or more observable physical or cultural characteristics", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CTRR", "religious center", "a facility where more than one religious activity is carried out, e.g., retreat, school, monastery, worship", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPLR", "religious populated place", "a populated place whose population is largely engaged in religious occupations", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RLG", "religious site", "an ancient site of significant religious importance", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ITTR", "research institute", "a facility where research is carried out", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RESV", "reservation", "a tract of land set aside for aboriginal, tribal, or native populations", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RES", "reserve", "a tract of public land reserved for future use or restricted as to use", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RSV", "reservoir(s)", "an artificial pond or lake", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RSRT", "resort", "a specialized facility for vacation, health, or participation sports activities", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RHSE", "resthouse", "a structure maintained for the rest and shelter of travelers", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RLGR", "retreat", "a place of temporary seclusion, especially for religious groups", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RDGE", "ridge(s)", "a long narrow elevation with steep sides, and a more or less continuous crest", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RD", "road", "an open way with improved surface for transportation of animals, people and vehicles", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RDB", "road bend", "a conspicuously curved or bent section of a road", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RDCUT", "road cut", "an excavation cut through a hill or ridge for a road", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RDJCT", "road junction", "a place where two or more roads join", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TNLRD", "road tunnel", "a tunnel through which a road passes", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RDST", "roadstead", "an open anchorage affording less protection than a harbor", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RK", "rock", "a conspicuous, isolated rocky mass", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HMDA", "rock desert", "a relatively sand-free, high bedrock plateau in a hot desert, with or without a gravel veneer", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RKFL", "rockfall", "an irregular mass of fallen rock at the base of a cliff or steep slope", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RKS", "rocks", "conspicuous, isolated rocky masses", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RKRY", "rookery", "a breeding place of a colony of birds or seals", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ESTR", "rubber plantation", "an estate which specializes in growing and tapping rubber trees", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RUIN", "ruin(s)", "a destroyed or decayed structure which is no longer functional", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BDGQ", "ruined bridge", "a destroyed or decayed bridge which is no longer functional", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DAMQ", "ruined dam", "a destroyed or decayed dam which is no longer functional", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SBKH", "sabkha(s)", "a salt flat or salt encrusted plain subject to periodic inundation from flooding or high tides", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SDL", "saddle", "a broad, open pass crossing a ridge or between hills or mountains", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SALT", "salt area", "a shallow basin or flat where salt accumulates after periodic inundation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MFGN", "salt evaporation ponds", "diked salt ponds used in the production of solar evaporated salt", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LKN", "salt lake", "an inland body of salt water with no outlet", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LKSN", "salt lakes", "inland bodies of salt water with no outlet", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MRSHN", "salt marsh", "a flat area, subject to periodic salt water inundation, dominated by grassy salt-tolerant plants", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNN", "salt mine(s)", "a mine from which salt is extracted", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PNDN", "salt pond", "a small standing body of salt water often in a marsh or swamp, usually along a seacoast", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PNDSN", "salt ponds", "small standing bodies of salt water often in a marsh or swamp, usually along a seacoast", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SNTR", "sanatorium", "a facility where victims of physical or mental disorders are treated", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SAND", "sand area", "a tract of land covered with sand", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ERG", "sandy desert", "an extensive tract of shifting sand and sand dunes", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STNS", "satellite station", "a facility for tracking and communicating with orbiting satellites", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MLSW", "sawmill", "a mill where logs or lumber are sawn to specified shapes and sizes", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SCH", "school", "building(s) where instruction in one or more branches of knowledge takes place", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ADMS", "school district", "school district", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STNB", "scientific research base", "a scientific facility used as a base from which research is carried out or monitored", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SCRB", "scrubland", "an area of low trees, bushes, and shrubs stunted by some environmental limitation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SEA", "sea", "a large body of salt water more or less confined by continuous land or chains of islands forming a subdivision of an ocean", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SCNU", "seachannel", "a continuously sloping, elongated depression commonly found in fans or plains and customarily bordered by levees on one or two sides", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SCSU", "seachannels", "continuously sloping, elongated depressions commonly found in fans or plains and customarily bordered by levees on one or two sides", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SMU", "seamount", "an elevation rising generally more than 1,000 meters and of limited extent across the summit", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SMSU", "seamounts", "elevations rising generally more than 1,000 meters and of limited extent across the summit", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("AIRS", "seaplane landing area", "a place on a waterbody where floatplanes land and take off", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPLA", "seat of a first-order administrative division", "seat of a first-order administrative division (PPLC takes precedence over PPLA)", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPLA4", "seat of a fourth-order administrative division", "seat of a fourth-order administrative division", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPLA2", "seat of a second-order administrative division", "seat of a second-order administrative division", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPLA3", "seat of a third-order administrative division", "seat of a third-order administrative division", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ADM2", "second-order administrative division", "a subdivision of a first-order administrative division", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BNKX", "section of bank", "section of bank", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CNLX", "section of canal", "section of canal", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ESTX", "section of estate", "section of estate", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HBRX", "section of harbor", "section of harbor", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PCLIX", "section of independent political entity", "section of independent political entity", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STMIX", "section of intermittent stream", "section of intermittent stream", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ISLX", "section of island", "section of island", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LGNX", "section of lagoon", "section of lagoon", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LKX", "section of lake", "section of lake", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PENX", "section of peninsula", "section of peninsula", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PLNX", "section of plain", "section of plain", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PLATX", "section of plateau", "section of plateau", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PPLX", "section of populated place", "section of populated place", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RFX", "section of reef", "section of reef", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STMX", "section of stream", "section of stream", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("VALX", "section of valley", "section of valley", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WADX", "section of wadi", "section of wadi", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FLLSX", "section of waterfall(s)", "section of waterfall(s)", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PCLS", "semi-independent political entity", "semi-independent political entity", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SWT", "sewage treatment plant", "facility for the processing of sewage and/or wastewater", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SHPF", "sheepfold", "a fence or wall enclosure for sheep and other small herd animals", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SHOL", "shoal(s)", "a surface-navigation hazard composed of unconsolidated material", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SHOPC", "shopping center or mall", "an urban shopping area featuring a variety of shops surrounding a usually open-air concourse reserved for pedestrian traffic; or a large suburban building or group of buildings containing various shops with associated passageways", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SHOR", "shore", "a narrow zone bordering a waterbody which covers and uncovers at high and low water, respectively", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SHRN", "shrine", "a structure or place memorializing a person or religious concept", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SILL", "sill", "the low part of a gap or saddle separating basins", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SINK", "sinkhole", "a small crater-shape depression in a karst area", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ESTSL", "sisal plantation", "an estate that specializes in growing sisal", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SLID", "slide", "a mound of earth material, at the base of a slope and the associated scoured area", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SLP", "slope(s)", "a surface with a relatively uniform slope angle", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SLCE", "sluice", "a conduit or passage for carrying off surplus water from a waterbody, usually regulated by means of a sluice gate", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SNOW", "snowfield", "an area of permanent snow and ice forming the accumulation area of a glacier", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SD", "sound", "a long arm of the sea forming a channel between the mainland and an island or islands; or connecting two larger bodies of water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SPA", "spa", "a resort area usually developed around a medicinal spring", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CTRS", "space center", "a facility for launching, tracking, or controlling satellites and space vehicles", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SPLY", "spillway", "a passage or outlet through which surplus water flows over, around or through a dam", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SPIT", "spit", "a narrow, straight or curved continuation of a beach into a waterbody", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SPNG", "spring(s)", "a place where ground water flows naturally out of the ground", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SPUR", "spur(s)", "a subordinate ridge projecting outward from a hill, mountain or other elevation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SQR", "square", "a broad, open, public area near the center of a town or city", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STBL", "stable", "a building for the shelter and feeding of farm animals, especially horses", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STDM", "stadium", "a structure with an enclosure for athletic games with tiers of seats for spectators", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STPS", "steps", "stones or slabs placed for ease in ascending or descending a steep slope", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STKR", "stock route", "a route taken by livestock herds", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("REG", "stony desert", "a desert plain characterized by a surface veneer of gravel and stones", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RET", "store", "a building where goods and/or services are offered for sale", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SHSE", "storehouse", "a building for storing goods, especially provisions", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STRT", "strait", "a relatively narrow waterway, usually narrower and less extensive than a sound, connecting two larger bodies of water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STM", "stream", "a body of running water moving to a lower level in a channel on land", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BNKR", "stream bank", "a sloping margin of a stream channel which normally confines the stream to its channel on land", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STMB", "stream bend", "a conspicuously curved or bent segment of a stream", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STMGS", "stream gauging station", "named place where a measuring station for a watercourse, reservoir or other water body exists", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STMM", "stream mouth(s)", "a place where a stream discharges into a lagoon, lake, or the sea", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STMS", "streams", "bodies of running water moving to a lower level in a channel on land", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ST", "street", "a paved urban thoroughfare", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("DAMSB", "sub-surface dam", "a dam put down to bedrock in a sand river", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SUBW", "subway", "a railroad used for mass public transportation primarily in urban areas, all or part of the system may be located below, above, or at ground level", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SUBS", "subway station", "a facility comprising ticket office, platforms, etc. for loading and unloading subway passengers", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MLSG", "sugar mill", "a facility where sugar cane is processed into raw sugar", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ESTSG", "sugar plantation", "an estate that specializes in growing sugar cane", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MFGSG", "sugar refinery", "a facility for converting raw sugar into refined sugar", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SPNS", "sulphur spring(s)", "a place where sulphur ground water flows naturally out of the ground", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SWMP", "swamp", "a wetland dominated by tree vegetation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SYG", "synagogue", "a place for Jewish worship and religious instruction", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TMTU", "tablemount (or guyot)", "a seamount having a comparatively smooth, flat top", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TMSU", "tablemounts (or guyots)", "seamounts having a comparatively smooth, flat top", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TAL", "talus slope", "a steep concave slope formed by an accumulation of loose rock fragments at the base of a cliff or steep slope", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("OILT", "tank farm", "a tract of land occupied by large, cylindrical, metal tanks in which oil or liquid petrochemicals are stored", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ESTT", "tea plantation", "an estate which specializes in growing tea bushes", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SCHT", "technical school", "post-secondary school with a specifically technical or vocational curriculum", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TMPL", "temple(s)", "an edifice dedicated to religious worship", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("AIRT", "terminal", "airport facilities for the handling of freight and passengers", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TRR", "terrace", "a long, narrow alluvial platform bounded by steeper slopes above and below, usually overlooking a waterbody", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TERR", "territory", "territory", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ADM3", "third-order administrative division", "a subdivision of a second-order administrative division", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CRKT", "tidal creek(s)", "a meandering channel in a coastal wetland subject to bi-directional tidal currents", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FLTT", "tidal flat(s)", "a large flat area of mud or sand attached to the shore and alternately covered and uncovered by the tide", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNSN", "tin mine(s)", "a mine where tin ore is extracted", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TOLL", "toll gate/barrier", "highway toll collection station", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TMB", "tomb(s)", "a structure for interring bodies", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TOWR", "tower", "a high conspicuous structure, typically much higher than its diameter", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RDCR", "traffic circle", "a road junction formed around a central circle about which traffic moves in one direction only", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TRL", "trail", "a path, track, or route used by pedestrians, animals, or off-road vehicles", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TRANT", "transit terminal", "facilities for the handling of vehicular freight and passengers", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TREE", "tree(s)", "a conspicuous tree used as a landmark", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TRIG", "triangulation station", "a point on the earth whose position has been determined by triangulation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TRB", "tribal area", "a tract of land used by nomadic or other tribes", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TUND", "tundra", "a marshy, treeless, high latitude plain, dominated by mosses, lichens, and low shrub vegetation under permafrost conditions", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TNL", "tunnel", "a subterranean passageway for transportation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TNLS", "tunnels", "subterranean passageways for transportation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CNLSB", "underground irrigation canal(s)", "a gently inclined underground tunnel bringing water for irrigation from aquifers", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LKSB", "underground lake", "a standing body of water in a cave", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("APNU", "undersea apron", "a gentle slope, with a generally smooth surface, particularly found around groups of islands and seamounts", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ARCU", "undersea arch", "a low bulge around the southeastern end of the island of Hawaii", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ARRU", "undersea arrugado", "an area of subdued corrugations off Baja California", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BNKU", "undersea bank", "an elevation, typically located on a shelf, over which the depth of water is relatively shallow but sufficient for safe surface navigation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BKSU", "undersea banks", "elevations, typically located on a shelf, over which the depth of water is relatively shallow but sufficient for safe surface navigation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BSNU", "undersea basin", "a depression more or less equidimensional in plan and of variable extent", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BNCU", "undersea bench", "a small terrace", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("BDLU", "undersea borderland", "a region adjacent to a continent, normally occupied by or bordering a shelf, that is highly irregular with depths well in excess of those typical of a shelf", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CNYU", "undersea canyon", "a relatively narrow, deep depression with steep sides, the bottom of which generally has a continuous slope", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CNSU", "undersea canyons", "relatively narrow, deep depressions with steep sides, the bottom of which generally has a continuous slope", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("CDAU", "undersea cordillera", "an entire mountain system including the subordinate ranges, interior plateaus, and basins", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ESCU", "undersea escarpment (or scarp)", "an elongated and comparatively steep slope separating flat or gently sloping areas", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FANU", "undersea fan", "a relatively smooth feature normally sloping away from the lower termination of a canyon or canyon system", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FLTU", "undersea flat", "a small level or nearly level area", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FRKU", "undersea fork", "a branch of a canyon or valley", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FRSU", "undersea forks", "a branch of a canyon or valley", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FRZU", "undersea fracture zone", "an extensive linear zone of irregular topography of the sea floor, characterized by steep-sided or asymmetrical ridges, troughs, or escarpments", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FURU", "undersea furrow", "a closed, linear, narrow, shallow depression", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GAPU", "undersea gap", "a narrow break in a ridge or rise", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("GLYU", "undersea gully", "a small valley-like feature", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HLLU", "undersea hill", "an elevation rising generally less than 500 meters", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HLSU", "undersea hills", "elevations rising generally less than 500 meters", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("HOLU", "undersea hole", "a small depression of the sea floor", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("KNLU", "undersea knoll", "an elevation rising generally more than 500 meters and less than 1,000 meters and of limited extent across the summit", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("KNSU", "undersea knolls", "elevations rising generally more than 500 meters and less than 1,000 meters and of limited extent across the summits", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LDGU", "undersea ledge", "a rocky projection or outcrop, commonly linear and near shore", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("LEVU", "undersea levee", "an embankment bordering a canyon, valley, or seachannel", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MDVU", "undersea median valley", "the axial depression of the mid-oceanic ridge system", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MESU", "undersea mesa", "an isolated, extensive, flat-topped elevation on the shelf, with relatively steep sides", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MOTU", "undersea moat", "an annular depression that may not be continuous, located at the base of many seamounts, islands, and other isolated elevations", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MNDU", "undersea mound", "a low, isolated, rounded hill", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MTU", "undersea mountain", "a well-delineated subdivision of a large and complex positive feature", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MTSU", "undersea mountains", "well-delineated subdivisions of a large and complex positive feature", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PKU", "undersea peak", "a prominent elevation, part of a larger feature, either pointed or of very limited extent across the summit", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PKSU", "undersea peaks", "prominent elevations, part of a larger feature, either pointed or of very limited extent across the summit", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PNLU", "undersea pinnacle", "a high tower or spire-shaped pillar of rock or coral, alone or cresting a summit", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PLNU", "undersea plain", "a flat, gently sloping or nearly level region", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PLTU", "undersea plateau", "a comparatively flat-topped feature of considerable extent, dropping off abruptly on one or more sides", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PLFU", "undersea platform", "a flat or gently sloping underwater surface extending seaward from the shore", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PRVU", "undersea province", "a region identifiable by a group of similar physiographic features whose characteristics are markedly in contrast with surrounding areas", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RMPU", "undersea ramp", "a gentle slope connecting areas of different elevations", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RNGU", "undersea range", "a series of associated ridges or seamounts", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RAVU", "undersea ravine", "a small canyon", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RFU", "undersea reef", "a surface-navigation hazard composed of consolidated material", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RFSU", "undersea reefs", "surface-navigation hazards composed of consolidated material", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RDGU", "undersea ridge", "a long narrow elevation with steep sides", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RDSU", "undersea ridges", "long narrow elevations with steep sides", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RISU", "undersea rise", "a broad elevation that rises gently, and generally smoothly, from the sea floor", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SDLU", "undersea saddle", "a low part, resembling in shape a saddle, in a ridge or between contiguous seamounts", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SHFU", "undersea shelf", "a zone adjacent to a continent (or around an island) that extends from the low water line to a depth at which there is usually a marked increase of slope towards oceanic depths", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("EDGU", "undersea shelf edge", "a line along which there is a marked increase of slope at the outer margin of a continental shelf or island shelf", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SHVU", "undersea shelf valley", "a valley on the shelf, generally the shoreward extension of a canyon", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SHLU", "undersea shoal", "a surface-navigation hazard composed of unconsolidated material", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SHSU", "undersea shoals", "hazards to surface navigation composed of unconsolidated material", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SILU", "undersea sill", "the low part of an underwater gap or saddle separating basins, including a similar feature at the mouth of a fjord", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SLPU", "undersea slope", "the slope seaward from the shelf edge to the beginning of a continental rise or the point where there is a general reduction in slope", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("SPRU", "undersea spur", "a subordinate elevation, ridge, or rise projecting outward from a larger feature", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TERU", "undersea terrace", "a relatively flat horizontal or gently inclined surface, sometimes long and narrow, which is bounded by a steeper ascending slope on one side and by a steep descending slope on the opposite side", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TNGU", "undersea tongue", "an elongate (tongue-like) extension of a flat sea floor into an adjacent higher feature", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TRNU", "undersea trench", "a long, narrow, characteristically very deep and asymmetrical depression of the sea floor, with relatively steep sides", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("TRGU", "undersea trough", "a long depression of the sea floor characteristically flat bottomed and steep sided, and normally shallower than a trench", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("VALU", "undersea valley", "a relatively shallow, wide depression, the bottom of which usually has a continuous gradient", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("VLSU", "undersea valleys", "a relatively shallow, wide depression, the bottom of which usually has a continuous gradient", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("USGE", "United States Government Establishment", "a facility operated by the United States Government in Panama", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("UPLD", "upland", "an extensive interior region of high land with low to moderate surface relief", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("VAL", "valley", "an elongated depression usually traversed by a stream", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("VALS", "valleys", "elongated depressions usually traversed by a stream", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("VETF", "veterinary facility", "a building or camp at which veterinary services are available", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("VIN", "vineyard", "a planting of grapevines", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("VINS", "vineyards", "plantings of grapevines", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("VLC", "volcano", "a conical elevation composed of volcanic materials with a crater at the top", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WAD", "wadi", "a valley or ravine, bounded by relatively steep banks, which in the rainy season becomes a watercourse; found primarily in North Africa and the Middle East", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WADB", "wadi bend", "a conspicuously curved or bent segment of a wadi", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WADJ", "wadi junction", "a place where two or more wadies join", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WADM", "wadi mouth", "the lower terminus of a wadi where it widens into an adjoining floodplain, depression, or waterbody", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WADS", "wadies", "valleys or ravines, bounded by relatively steep banks, which in the rainy season become watercourses; found primarily in North Africa and the Middle East", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WALL", "wall", "a thick masonry structure, usually enclosing a field or building, or forming the side of a structure", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MLWTR", "water mill", "a mill powered by running water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("PMPW", "water pumping station", "a facility for pumping water from a major well or through a pipeline", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RSVT", "water tank", "a contained pool or tank of water at, below, or above ground level", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WTRC", "watercourse", "a natural, well-defined channel produced by flowing water, or an artificial channel designed to carry flowing water", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("FLLS", "waterfall(s)", "a perpendicular or very steep descent of the water of a stream", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WTRH", "waterhole(s)", "a natural hole, hollow, or small depression that contains water, used by man and animals, especially in arid areas", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WTRW", "waterworks", "a facility for supplying potable water through a water source and a system of pumps and filtration beds", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WEIR", "weir(s)", "a small dam in a stream, designed to raise the water level or to divert stream flow through a desired channel", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WLL", "well", "a cylindrical hole, pit, or tunnel drilled or dug down to a depth from which water, oil, or gas can be pumped or brought to the surface", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WLLS", "wells", "cylindrical holes, pits, or tunnels drilled or dug down to a depth from which water, oil, or gas can be pumped or brought to the surface", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WTLD", "wetland", "an area subject to inundation, usually characterized by bog, marsh, or swamp vegetation", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("STNW", "whaling station", "a facility for butchering whales and processing train oil", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WHRF", "wharf(-ves)", "a structure of open rather than solid construction along a shore or a bank which provides berthing for ships and cargo-handling facilities", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WHRL", "whirlpool", "a turbulent, rotating movement of water in a stream", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("RESW", "wildlife reserve", "a tract of public land reserved for the preservation of wildlife", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("MLWND", "windmill", "a mill or water pump powered by wind", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("WRCK", "wreck", "the site of the remains of a wrecked vessel", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ZN", "zone", "zone", "en"));
        geographicFeatureDesignationRepository.save(new GeographicFeatureDesignation("ZOO", "zoo", "a zoological garden or park where wild animals are kept for exhibition", "en"));
    }
}
